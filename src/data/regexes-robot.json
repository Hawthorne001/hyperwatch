[
  {
    "regex": "(Googlebot)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Googlebot)-Image/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "Mediapartners-(Google)"
  },
  {
    "regex": "(Applebot)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Twitterbot)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(facebookexternalhit)/(\\d+)\\.(\\d+)",
    "family_replacement": "Facebook"
  },
  {
    "regex": "(DotBot)/(\\d+)\\.(\\d+)",
    "family_replacement": "Moz"
  },
  {
    "regex": "(bingbot)/(\\d+)\\.(\\d+)",
    "family_replacement": "Bing"
  },
  {
    "regex": "(Bing)Preview/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(DuckDuckBot)-Https/(\\d+)\\.(\\d+)",
    "family_replacement": "DuckDuckGo"
  },
  {
    "regex": "(Yandex)Bot/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Yandex)MobileBot/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Yandex)Images/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(coccocbot)/(\\d+)\\.(\\d+)",
    "family_replacement": "Coc Coc"
  },
  {
    "regex": "(coccocbot-image)/(\\d+)\\.(\\d+)",
    "family_replacement": "Coc Coc"
  },
  {
    "regex": "(Baidu)spider-render/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Baidu)spider-image/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Baidu)spider-image"
  },
  {
    "regex": "(Semrush)Bot/(\\d+)"
  },
  {
    "regex": "(Semrush)Bot"
  },
  {
    "regex": "(Sogou) web spider/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Sogou) Pic Spider/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Ahrefs)Bot/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Slackbot)-LinkExpanding (\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Seznam)Bot/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Pinterest)bot/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(special_archiver)/(\\d+)\\.(\\d+)\\.(\\d+)",
    "family_replacement": "Archive.org"
  },
  {
    "regex": "(MJ12bot)/v(\\d+)\\.(\\d+)\\.(\\d+)",
    "family_replacement": "Majestic"
  },
  {
    "regex": "(CloudFlare)-AlwaysOnline/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Yeti)/(\\d+)\\.(\\d+)",
    "family_replacement": "Naver"
  },
  {
    "regex": "yacybot",
    "family_replacement": "YaCy"
  },
  {
    "regex": "(Mojeek)Bot/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(ArchiveTeam) ArchiveBot/(\\d+)"
  },
  {
    "regex": "(Barkrowler)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(BLEXBot)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Bytespider)"
  },
  {
    "regex": "(Cincraw)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(heritrix)/(\\d+)\\.(\\d+)\\.(\\d+)",
    "family_replacement": "Heritrix"
  },
  {
    "regex": "(MagiBot)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(MBCrawler)/(\\d+)\\.(\\d+)",
    "family_replacement": "Monitor Backlinks"
  },
  {
    "regex": "(PetalBot)"
  },
  {
    "regex": "(Raven)Crawler/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Riddler)"
  },
  {
    "regex": "(Scrapy)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(WordPress.com mShots)"
  },
  {
    "regex": "github-camo",
    "family_replacement": "GitHub Camo"
  },
  {
    "regex": "(GoogleImageProxy)"
  },
  {
    "regex": "(Camo Asset Proxy) (\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(go-camo)"
  },
  {
    "regex": "(Pingdom)\\.com_bot_version_(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(PingdomPageSpeed)/(\\d+)\\.(\\d+)",
    "family_replacement": "Pingdom Page Speed"
  },
  {
    "regex": "(PTST)/(\\d+)\\.(\\d+)",
    "family_replacement": "WebPageTest.org"
  },
  {
    "regex": "(Superhuman)"
  },
  {
    "regex": "(YahooMailProxy)"
  },
  {
    "regex": "(axios)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Go-http-client)/(\\d+)\\.(\\d+)",
    "family_replacement": "Go HTTP Client"
  },
  {
    "regex": "(fasthttp)"
  },
  {
    "regex": "(got) "
  },
  {
    "regex": "(Java)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Needle)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(node-fetch)/(\\d+)\\.(\\d+)",
    "family_replacement": "Node Fetch"
  },
  {
    "regex": "(okhttp)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(python-requests)/(\\d+)\\.(\\d+)\\.(\\d+)",
    "family_replacement": "Python Requests"
  },
  {
    "regex": "(request)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(HelloWorks)"
  },
  {
    "regex": "(mailgun)",
    "family_replacement": "Mailgun"
  },
  {
    "regex": "(Stripe)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(TransferWise)-Webhook/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(adreview)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(AHC)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(ArchiveBox)"
  },
  {
    "regex": "(Embedly)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(e.ventures) Investment Crawler"
  },
  {
    "regex": "(ImageOptim)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "ltx71"
  },
  {
    "regex": "(Misskey)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Package Control)"
  },
  {
    "regex": "(Prerender)"
  },
  {
    "regex": "(seocompany\\.store)"
  },
  {
    "regex": "(Shields.io)"
  },
  {
    "regex": "(Synapse)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Test Certificate Info)"
  },
  {
    "regex": "(Triplebyte)"
  },
  {
    "regex": "(vkShare)"
  }
]
