[
  {
    "regex": "(Googlebot)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Googlebot)-Image/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "Mediapartners-(Google)"
  },
  {
    "regex": "(Applebot)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(DotBot)/(\\d+)\\.(\\d+)",
    "family_replacement": "Moz"
  },
  {
    "regex": "(bingbot)/(\\d+)\\.(\\d+)",
    "family_replacement": "Bing"
  },
  {
    "regex": "(Bing)Preview/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Yandex)Bot/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Yandex)Images/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(coccocbot)/(\\d+)\\.(\\d+)",
    "family_replacement": "Coc Coc"
  },
  {
    "regex": "(coccocbot-image)/(\\d+)\\.(\\d+)",
    "family_replacement": "Coc Coc"
  },
  {
    "regex": "(Baidu)spider-render/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Semrush)Bot/(\\d+)"
  },
  {
    "regex": "(Semrush)Bot"
  },
  {
    "regex": "(Sogou) web spider/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Ahrefs)Bot/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Seznam)Bot/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(special_archiver)/(\\d+)\\.(\\d+)\\.(\\d+)",
    "family_replacement": "Archive.org"
  },
  {
    "regex": "(MJ12bot)/v(\\d+)\\.(\\d+)\\.(\\d+)",
    "family_replacement": "Majestic"
  },
  {
    "regex": "(Yeti)/(\\d+)\\.(\\d+)",
    "family_replacement": "Naver"
  },
  {
    "regex": "yacybot",
    "family_replacement": "YaCy"
  },
  {
    "regex": "(Raven)Crawler/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Mojeek)Bot/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(ArchiveTeam) ArchiveBot/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Bytespider)"
  },
  {
    "regex": "(PetalBot)"
  },
  {
    "regex": "(Cincraw)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Scrapy)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(BLEXBot)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(MBCrawler)/(\\d+)\\.(\\d+)",
    "family_replacement": "Monitor Backlinks"
  },
  {
    "regex": "github-camo",
    "family_replacement": "GitHub Camo"
  },
  {
    "regex": "(GoogleImageProxy)"
  },
  {
    "regex": "Slack-ImgProxy",
    "family_replacement": "Slack ImgProxy"
  },
  {
    "regex": "(Camo Asset Proxy) (\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(go-camo)"
  },
  {
    "regex": "(Pingdom)\\.com_bot_version_(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(WebPageTest)\\.org"
  },
  {
    "regex": "(Go-http-client)/(\\d+)\\.(\\d+)",
    "family_replacement": "Go HTTP Client"
  },
  {
    "regex": "(node-fetch)/(\\d+)\\.(\\d+)",
    "family_replacement": "Node Fetch"
  },
  {
    "regex": "(request)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Java)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Prerender)"
  },
  {
    "regex": "(Stripe)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Misskey)/(\\d+)\\.(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(Embedly)/(\\d+)\\.(\\d+)"
  },
  {
    "regex": "(AHC)/(\\d+)\\.(\\d+)"
  }
]
