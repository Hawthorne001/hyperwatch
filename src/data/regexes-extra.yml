user_agent_parsers:
  # Browsers
  - regex: '(BeakerBrowser)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Beaker Browser'

  - regex: '(coc_coc_browser)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Coc Coc Browser'

  - regex: '(Falkon)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(HuaweiBrowser)/(\d+)\.(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Huawei Browser'

  - regex: '(IceDragon)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(PrivacyBrowser)/(\d+)\.(\d+)'
    family_replacement: 'Privacy Browser'

  - regex: '(Whale)/(\d+)\.(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Naver Whale'

  # Apps

  - regex: '(AltairGraphQLClient)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Atom)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(calibre-viewer)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Calibre'

  - regex: '(Code)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'VS Code'

  - regex: '(Code-OSS)/(\d+)\.(\d+)\.(\d+)'
    regex_flag: 'i'
    family_replacement: 'Code OSS'

  - regex: '(Code-Insiders)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'VS Code'

  - regex: '(discord)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Discord'

  - regex: '(draw\.io)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'diagrams.net'

  - regex: '(Evolution)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(githubdocset)'

  - regex: '(IntelliJ)'

  - regex: '(JavaFX)/(\d+)'

  - regex: '(LibreOffice)'

  - regex: '(Mastodon)App/(\d+)\.(\d+)\.(\d+)'

  - regex: '(mattermost)-(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Mattermost'

  - regex: '(mailapp)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Notion)/(\d+)\.(\d+)\.(\d+)'

  # https://poi.moe/
  - regex: '(poi)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(QtWebEngine)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(SketchUp)/(\d+)\.(\d+)'

  - regex: SkypeUriPreview
    family_replacement: 'Skype'

  - regex: '(Teams)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Typora)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(uTools)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(VSCodium)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(VSCode@FB)/(\d+)\.(\d+)\.(\d+)' # Not working

  # Mobile Apps

  - regex: '(DuckDuckGo)/(\d+)'

  - regex: '(Ecosia)'

  - regex: '(GitHub)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(LinkedIn)App'

  - regex: '(WhatsApp)/(\d+)\.(\d+)\.(\d+)'

  # Email

  - regex: '(Mailspring)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Focus)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Firefox Focus'

  # Others

  - regex: '(Microsoft Surface)'

  # Mozilla (suspicious)

  - regex: '^(Mozilla)/(\d+)\.(\d+) \(compatible;?\)$'

  - regex: '^(Mozilla)/(\d+)\.(\d+)$'

  - regex: '^(Mozilla)$'

robot_parsers:
  # Major Crawlers (verified identity)

  - regex: '(Applebot)/(\d+)\.(\d+)'

  - regex: '(Ahrefs)Bot/(\d+)\.(\d+)'

  - regex: '(ia_archiver)/(\d+)\.(\d+)'
    family_replacement: 'Alexa'

  - regex: '(archive\.org_bot)'
    family_replacement: 'Archive.org'
  - regex: '(special_archiver)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Archive.org'

  - regex: '(Archive-It)'

  # http://cliqz.com/company/cliqzbot
  - regex: '(Cliqzbot)/(\d+)\.(\d+)'
    family_replacement: 'Cliqz'

  - regex: '(CloudFlare)-AlwaysOnline/(\d+)\.(\d+)'

  - regex: '(coccocbot)/(\d+)\.(\d+)'
    family_replacement: 'Coc Coc'
  - regex: '(coccocbot-web)/(\d+)\.(\d+)'
    family_replacement: 'Coc Coc'
  - regex: '(coccocbot-image)/(\d+)\.(\d+)'
    family_replacement: 'Coc Coc'

  # http://www.baidu.com/search/spider.htm
  - regex: '(Baidu)spider/(\d+)\.(\d+)'
  - regex: '(Baidu)spider-render/(\d+)\.(\d+)'
  - regex: '(Baidu)spider-image/(\d+)\.(\d+)'
  - regex: '(Baidu)spider-image'

  - regex: '(bingbot)/(\d+)\.(\d+)'
    family_replacement: 'Bing'

  - regex: '(Bing)Preview/(\d+)\.(\d+)'

  - regex: '(Discord)bot/(\d+)\.(\d+)'

  - regex: '(DotBot)/(\d+)\.(\d+)'
    family_replacement: 'Moz'

  # https://duckduckgo.com/duckduckbot
  - regex: '(DuckDuckBot)-Https/(\d+)\.(\d+)'
    family_replacement: 'DuckDuckGo'
  - regex: '(DuckDuckBot)-Favicons-Bot/(\d+)\.(\d+)'
    family_replacement: 'DuckDuckGo'

  - regex: '(facebookexternalhit)/(\d+)\.(\d+)'
    family_replacement: 'Facebook'

  # Google
  - regex: '(Googlebot)/(\d+)\.(\d+)'
  - regex: '(Googlebot)-Image/(\d+)\.(\d+)'
  - regex: 'Google.*/\+/web/snippet'
    family_replacement: 'Google Plus'
  - regex: '(GoogleDocs)'
    family_replacement: 'Google Docs'
  - regex: 'Mediapartners-(Google)'
  - regex: '(Google Favicon)'
  - regex: '(GoogleImageProxy)'
    family_replacement: 'Google Image Proxy'

  - regex: '(LinkedIn)Bot/(\d+)\.(\d+)'

  - regex: '(Mail\.RU_Bot)/(\d+)\.(\d+)'
    family_replacement: 'Mail.RU'

  - regex: '(MJ12bot)/v(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Majestic'

  - regex: '(Mojeek)Bot/(\d+)\.(\d+)'

  # http://www.pinterest.com/bot.html
  - regex: '(Pinterest)bot/(\d+)\.(\d+)'

  - regex: '(Semrush)Bot/(\d+)'
  - regex: '(Semrush)Bot'

  - regex: '(Seznam)Bot/(\d+)\.(\d+)'

  - regex: '(Slack)bot-LinkExpanding (\d+)\.(\d+)'

  - regex: '(Sogou) web spider/(\d+)\.(\d+)'
  - regex: '(Sogou) Pic Spider/(\d+)\.(\d+)'

  - regex: '(Twitter)bot/(\d+)\.(\d+)'

  # https://yacy.net/bot.html
  - regex: 'yacybot'
    family_replacement: 'YaCy'

  - regex: 'Yahoo! Slurp'
    family_replacement: 'Yahoo'
  # https://help.yahoo.com/kb/mail/yahoo-link-preview-SLN23615.html
  - regex: 'Yahoo Link Preview'
    family_replacement: 'Yahoo'

  - regex: '(Yandex)Bot/(\d+)\.(\d+)'
  - regex: '(Yandex)MobileBot/(\d+)\.(\d+)'
  - regex: '(Yandex)Images/(\d+)\.(\d+)'
  - regex: '(Yandex)AccessibilityBot/(\d+)\.(\d+)'

  # http://naver.me/spd
  - regex: '(Yeti)/(\d+)\.(\d+)'
    family_replacement: 'Naver'

  - regex: '(Yisou)Spider/(\d+)\.(\d+)'
  - regex: '(Yisou)Spider'

  # Other Crawlers

  - regex: '(ArchiveTeam) ArchiveBot/(\d+)'

  - regex: '(Artifactory)/(\d+)\.(\d+)\.(\d+)'

  # https://awario.com/bots.html
  - regex: '(Awario)SmartBot/(\d+)\.(\d+)'

  # https://babbar.tech/crawler
  - regex: '(BarkRowler)/(\d+)\.(\d+)'

  # http://bit.ly/
  - regex: '(bitlybot)/(\d+)\.(\d+)'
    family_replacement: 'Bitly'

  # http://webmeup-crawler.com/
  - regex: '(BLEXBot)/(\d+)\.(\d+)'

  # https://zhanzhang.toutiao.com/
  - regex: '(Bytespider)'

  # https://app.hypefactors.com/media-monitoring/about.html
  - regex: '(Buck)/(\d+)\.(\d+)'

  # http://cincrawdata.net/bot/
  - regex: '(Cincraw)/(\d+)\.(\d+)'

  - regex: '(heritrix)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Heritrix'

  # http://suite.seozoom.it/bot.html
  - regex: '(Linkbot) (\d+)\.(\d+)'

  # http://www.linkdex.com/bots/
  - regex: '(linkdexbot)/(\d+)\.(\d+)'
    family_replacement: 'Linkdex'

  # https://magi.com/bots
  - regex: '(MagiBot)/(\d+)\.(\d+)\.(\d+)'

  # https://monitorbacklinks.com/robot
  - regex: '(MBCrawler)/(\d+)\.(\d+)'
    family_replacement: 'Monitor Backlinks'

  # https://support.paper.li/entries/20023257-what-is-paper-li
  - regex: '(PaperLi)Bot/(\d+)\.(\d+)'

  # https://aspiegel.com/petalbot
  - regex: '(PetalBot)'

  # http://www.proximic.com/info/spider.php
  - regex: 'proximic'
    family_replacement: 'Proximic'

  - regex: '(Qwant)ify/(\d+)\.(\d+)'

  # https://raventools.com/seo-website-auditor/
  - regex: '(Raven)Crawler/(\d+)\.(\d+)'

  # http://riddler.io/about
  - regex: '(Riddler)'

  # http://sempi.tech/bot.html
  - regex: '(Semanticbot)/(\d+)\.(\d+)'

  # http://serendeputy.com/about/serendeputy-bot
  - regex: '(Serendeputy)Bot/(\d+)\.(\d+)\.(\d+)'

  # https://scrapy.org
  - regex: '(Scrapy)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Telegram)Bot'

  - regex: '(Tweetmeme)Bot/(\d+)\.(\d+)'

  # http://linkfluence.com/
  - regex: '(YaK)/(\d+)\.(\d+)'
    family_replacement: 'Linkfluence'

  # Screenshots

  - regex: 'HggH PhantomJS Screenshoter'

  - regex: '(WordPress.com mShots)'

  # Images Proxies

  - regex: 'github-camo'
    family_replacement: 'GitHub Camo'

  - regex: '(Camo Asset Proxy) (\d+)\.(\d+)\.(\d+)'

  - regex: '(go-camo)'

  - regex: 'Slack-ImgProxy'
    family_replacement: 'Slack ImgProxy'

  # Link Checkers

  - regex: '(brokenlinkcheck\.com)/(\d+)\.(\d+)'

  - regex: '(broken-link-checker)/(\d+)\.(\d+)\.(\d+)'

  # https://www.npmjs.com/package/hyperlink
  - regex: '(Hyperlink) v(\d+)\.(\d+)\.(\d+)'

  - regex: 'LinkCheck by Siteimprove\.com'
    family_replacement: 'Siteimprove'

  - regex: '(textlint-rule-no-dead-link)/(\d+)\.(\d+)'

  # Monitoring / Audit

  - regex: '(Pingdom)\.com_bot_version_(\d+)\.(\d+)'

  - regex: '(PingdomPageSpeed)/(\d+)\.(\d+)'
    family_replacement: 'Pingdom Page Speed'

  - regex: '(PTST)/(\d+)\.(\d+)'
    family_replacement: 'WebPageTest.org'

  - regex: HappyApps-WebCheck
    family_replacement: 'Happy Apps'

  - regex: '(UptimeRobot)/(\d+)\.(\d+)'
    family_replacement: 'Uptime Robot'

  # Email

  - regex: '(Superhuman)'

  - regex: '(YahooMailProxy)'

  # Libraries

  - regex: '(axios)/(\d+)\.(\d+)\.(\d+)'

  - regex: (fasthttp)

  - regex: '(Go-http-client)/(\d+)\.(\d+)'
    family_replacement: 'Go HTTP Client'

  - regex: '(Go) (\d+)\.(\d+) package http'
    family_replacement: 'Go http package'

  # https://github.com/sindresorhus/got
  - regex: '(got) '

  - regex: '(GuzzleHttp)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(http\.rb)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Java)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(lua-resty-http)/(\d+)\.(\d+)'

  - regex: '(Needle)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(node-fetch)/(\d+)\.(\d+)'
    family_replacement: 'Node Fetch'

  - regex: '(okhttp)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(python-requests)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Python Requests'

  - regex: '(request)/(\d+)\.(\d+)\.(\d+)'

  # Services

  - regex: '(HelloWorks)'

  - regex: '(mailgun)'
    family_replacement: 'Mailgun'

  - regex: '(Stripe)/(\d+)\.(\d+)'

  - regex: '(TransferWise)-Webhook/(\d+)\.(\d+)'

  - regex: '(sentry)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Sentry'

  # Others

  - regex: '(360Spider)'

  - regex: '(adreview)/(\d+)\.(\d+)'

  - regex: '(AHC)/(\d+)\.(\d+)'

  - regex: '(AppEngine-Google)'
    family_replacement: 'Google App Engine'

  # https://github.com/pirate/ArchiveBox
  - regex: '(ArchiveBox)'

  # http://domini.cat/catexplorador.html
  - regex: '(CATExplorador)/(\d+)\.(\d+)'

  - regex: '(cortex)/(\d+)\.(\d+)'

  - regex: '(CyotekWebCopy)/(\d+)\.(\d+)'

  - regex: '(crawler4j)'

  - regex: '(Datanyze)'

  - regex: '(Drupal)'

  # http://ecairn.com/grabber
  - regex: '(eCairn-Grabber)/(\d+)\.(\d+)'

  # support@embed.ly
  - regex: '(Embedly)/(\d+)\.(\d+)'
  - regex: '(Embedly)'

  - regex: '(e.ventures) Investment Crawler'

  - regex: '(Feed43) Proxy/(\d+)\.(\d+)'

  - regex: 'Google-Apps-Script'
    family_replacement: 'Google Apps Script'

  - regex: '(HTML Proofer)/(\d+)\.(\d+).(\d+)'

  - regex: '(Hexometer)'

  - regex: '(HTTrack) (\d+)\.(\d+)'

  # https://imageoptim.com/api
  - regex: '(ImageOptim)/(\d+)\.(\d+)\.(\d+)'

  # http://ltx71.com/
  - regex: '(ltx71)'

  - regex: '(Mastodon)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(MeorcaBot)'

  - regex: '(Mediatoolkit)bot'

  - regex: '(Misskey)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(MS Search) (\d+)\.(\d+)'

  # https://muckrack.com
  - regex: '(MuckRack)/(\d+)\.(\d+)'

  - regex: '(newspaper)/(\d+)\.(\d+)\.(\d+)'

  # http://cloudsystemnetworks.com
  - regex: '(Nimbostratus)-Bot/v(\d+)\.(\d+)\.(\d+)'

  - regex: '(npm)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Nuzzel)'

  - regex: '(ocPortal)'

  - regex: '(Package Control)'

  # https://social.evilma.id
  - regex: '(Pleroma)'

  # https://github.com/prerender/prerender
  - regex: '(Prerender)'

  - regex: '(Refindbot)/(\d+)\.(\d+)'

  - regex: '^(Ruby)$'

  - regex: '(Scoop\.it)'

  - regex: '(Screaming Frog SEO Spider)/(\d+)\.(\d+)'

  - regex: '(seocompany\.store)'

  - regex: '(SEOkicks)'

  - regex: '(seoscanners\.net)/(\d+)\.(\d+)'
    family_replacement: 'Seoscanners.net'

  - regex: (Sirportly)

  - regex: '(Shields.io)'

  - regex: '(Summaly)Bot/(\d+)\.(\d+)\.(\d+)'
  - regex: '(summaly)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Summaly'

  - regex: '(Synapse)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Test Certificate Info)'

  - regex: '(The Knowledge AI)'

  - regex: '(The Lounge IRC Client)'

  - regex: '\+http:\/\/tweetedtimes\.com'
    family_replacement: 'The Tweeted Times'

  - regex: '(Trakkin)/(\d+)\.(\d+)'

  - regex: '(TrendsmapResolver)/(\d+)\.(\d+)'

  - regex: '(Triplebyte)'

  # http://vk.com/dev/Share
  - regex: '(vkShare)'

  - regex: '(Wappalyzer)'

  - regex: '(WordPress)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(XenForo)/(\d+)'
