user_agent_parsers:
  - regex: '(BeakerBrowser)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Beaker Browser'

  - regex: '(HuaweiBrowser)/(\d+)\.(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Huawei Browser'

  - regex: '(Whale)/(\d+)\.(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Naver Whale'

  - regex: '(Atom)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Code)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'VS Code'

  - regex: '(Code-Insiders)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'VS Code'

  - regex: '(VSCodium)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(VSCode@FB)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Code-OSS)/(\d+)\.(\d+)\.(\d+)'
    regex_flag: 'i'
    family_replacement: 'Code OSS'

  # https://poi.moe/
  - regex: '(poi)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Notion)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Typora)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(uTools)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(JavaFX)/(\d+)'

  - regex: '(IntelliJ)'

  - regex: '(DuckDuckGo)/(\d+)'

  - regex: '(GitHub)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Ecosia)'

  - regex: '(QtWebEngine)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(githubdocset)'

  - regex: '(LibreOffice)'

robot_parsers:
  # Major Crawlers

  - regex: '(Googlebot)/(\d+)\.(\d+)'
  - regex: '(Googlebot)-Image/(\d+)\.(\d+)'

  - regex: 'Mediapartners-(Google)'

  - regex: '(Applebot)/(\d+)\.(\d+)'

  - regex: '(Twitterbot)/(\d+)\.(\d+)'

  - regex: '(facebookexternalhit)/(\d+)\.(\d+)'
    family_replacement: 'Facebook'

  - regex: '(DotBot)/(\d+)\.(\d+)'
    family_replacement: 'Moz'

  - regex: '(bingbot)/(\d+)\.(\d+)'
    family_replacement: 'Bing'

  - regex: '(Bing)Preview/(\d+)\.(\d+)'

  - regex: '(Yandex)Bot/(\d+)\.(\d+)'
  - regex: '(Yandex)MobileBot/(\d+)\.(\d+)'
  - regex: '(Yandex)Images/(\d+)\.(\d+)'

  - regex: '(coccocbot)/(\d+)\.(\d+)'
    family_replacement: 'Coc Coc'
  - regex: '(coccocbot-image)/(\d+)\.(\d+)'
    family_replacement: 'Coc Coc'

  # http://www.baidu.com/search/spider.htm
  - regex: '(Baidu)spider-render/(\d+)\.(\d+)'
  - regex: '(Baidu)spider-image/(\d+)\.(\d+)'

  - regex: '(Semrush)Bot/(\d+)'
  - regex: '(Semrush)Bot'

  - regex: '(Sogou) web spider/(\d+)\.(\d+)'

  - regex: '(Ahrefs)Bot/(\d+)\.(\d+)'

  - regex: '(Seznam)Bot/(\d+)\.(\d+)'

  # http://www.pinterest.com/bot.html
  - regex: '(Pinterest)bot/(\d+)\.(\d+)'

  - regex: '(special_archiver)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Archive.org'

  - regex: '(MJ12bot)/v(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Majestic'

  # http://naver.me/spd
  - regex: '(Yeti)/(\d+)\.(\d+)'
    family_replacement: 'Naver'

  # https://yacy.net/bot.html
  - regex: 'yacybot'
    family_replacement: 'YaCy'

  # https://raventools.com/seo-website-auditor/
  - regex: '(Raven)Crawler/(\d+)\.(\d+)'

  - regex: '(Mojeek)Bot/(\d+)\.(\d+)'

  # Other Crawlers

  - regex: '(ArchiveTeam) ArchiveBot/(\d+)'

  # https://zhanzhang.toutiao.com/
  - regex: '(Bytespider)'

  # https://aspiegel.com/petalbot
  - regex: '(PetalBot)'

  # http://cincrawdata.net/bot/
  - regex: '(Cincraw)/(\d+)\.(\d+)'

  # https://scrapy.org
  - regex: '(Scrapy)/(\d+)\.(\d+)\.(\d+)'

  # http://webmeup-crawler.com/
  - regex: '(BLEXBot)/(\d+)\.(\d+)'

  # https://monitorbacklinks.com/robot
  - regex: '(MBCrawler)/(\d+)\.(\d+)'
    family_replacement: 'Monitor Backlinks'

  # http://riddler.io/about
  - regex: '(Riddler)'

  - regex: '(heritrix)/(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'Heritrix'

  - regex: '(WordPress.com mShots)'

  # https://magi.com/bots
  - regex: '(MagiBot)/(\d+)\.(\d+)\.(\d+)'

  # Images Proxies

  - regex: 'github-camo'
    family_replacement: 'GitHub Camo'

  - regex: '(GoogleImageProxy)'

  - regex: 'Slack-ImgProxy'
    family_replacement: 'Slack ImgProxy'

  - regex: '(Camo Asset Proxy) (\d+)\.(\d+)\.(\d+)'

  - regex: '(go-camo)'

  # Monitoring / Audit

  - regex: '(Pingdom)\.com_bot_version_(\d+)\.(\d+)'

  - regex: '(PingdomPageSpeed)/(\d+)\.(\d+)'
    family_replacement: 'Pingdom Page Speed'

  - regex: '(WebPageTest)\.org'

  # Libraries

  - regex: '(Go-http-client)/(\d+)\.(\d+)'
    family_replacement: 'Go HTTP Client'

  - regex: '(node-fetch)/(\d+)\.(\d+)'
    family_replacement: 'Node Fetch'

  - regex: '(request)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Java)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(okhttp)/(\d+)\.(\d+)\.(\d+)'

  # https://github.com/prerender/prerender
  - regex: '(Prerender)'

  # Services

  - regex: '(Stripe)/(\d+)\.(\d+)'

  # Social

  - regex: '(Misskey)/(\d+)\.(\d+)\.(\d+)'

  - regex: '(Embedly)/(\d+)\.(\d+)'

  # Others

  - regex: '(AHC)/(\d+)\.(\d+)'

  - regex: '(adreview)/(\d+)\.(\d+)'
